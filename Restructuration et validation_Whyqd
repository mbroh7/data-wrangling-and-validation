{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import whyqd as _w\n",
    "schema = _w.Schema()\n",
    "\n",
    "details = {\n",
    "        \"name\": \"human-development-report\",\n",
    "        \"title\": \"UN Human Development Report 2007 - 2008\",\n",
    "        \"description\": \"\"\"\n",
    "        En 1990, le premier rapport sur le développement humain a introduit une nouvelle approche pour\n",
    "        faire progresser le bien-être de l'homme. Le développement humain - ou l'approche du développement humain - consiste à\n",
    "        l'élargissement de la richesse de la vie humaine, plutôt que simplement de la richesse de l'économie dans laquelle\n",
    "        les êtres humains vivent. Il s'agit d'une approche axée sur les personnes, leurs possibilités et leurs choix.\"\"\"\n",
    "}\n",
    "schema = _w.Schema()\n",
    "schema.set_details(**details)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "fields = [\n",
    "    {\n",
    "        \"name\": \"HDI_Rank\",\n",
    "            \"title\": \"HDI Rank\",\n",
    "            \"type\": \"integer\",\n",
    "            \"description\": \"he HDI rank is determined using HDI values to the sixth decimal point.\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"HDI_Level\",\n",
    "        \"title\": \"HDI Level\",\n",
    "        \"type\": \"string\",\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Country_name\",\n",
    "        \"title\": \"Country name\",\n",
    "        \"type\": \"string\",\n",
    "        \"description\": \"The name of country\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Survey_Year\",\n",
    "        \"title\": \"Survey Year\",\n",
    "        \"type\": \"year\",\n",
    "        \"description\": \"The year of survey\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"HDI_Value\",\n",
    "        \"title\": \"HDI Value\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Human Development Index value\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Expect_Birth\",\n",
    "        \"title\": \"Life expectancy at birth\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Life expectancy at birth\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Liter_Rate\",\n",
    "        \"title\": \"Adult literacy rate % aged 15 and above\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Adult literacy rate % aged 15 and above\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Enrolment_Ratio%\",\n",
    "        \"title\": \"Enrolment Ratio\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Combined gross enrolment ratio for primary, secondary and tertiary education %\"\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"GDP_capita PPPUS$\",\n",
    "        \"title\": \"GDP per capita PPP US$\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Gross Domestic Product per capita PPP US$\"\n",
    "    },\n",
    "    {\n",
    "\n",
    "        \"name\": \"Expect_Index\",\n",
    "        \"title\": \"Life expectancy index\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Life expectancy index\"\n",
    "\n",
    "    },\n",
    "    {\n",
    "        \"name\": \"Educ_index\",\n",
    "        \"title\": \"Education index\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Education index\"\n",
    "    },\n",
    "    {\n",
    "\n",
    "        \"name\": \"GDP_Index\",\n",
    "        \"title\": \"GDP Index\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"Gross Domestic Product index\"\n",
    "    },\n",
    "    {\n",
    "\n",
    "        \"name\": \"GdpHdi_rank\",\n",
    "        \"title\": \"GDP per capita PPP US$ rank minus HDI rank\",\n",
    "        \"type\": \"number\",\n",
    "        \"description\": \"A positive figure indicates that the HDI rank is higher than the GDP per capita PPP US$ rank, a negative the opposite.\"\n",
    "    },\n",
    "]\n",
    "for field in fields:\n",
    "    schema.set_field(**field)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'name': 'country_name',\n",
       " 'type': 'string',\n",
       " 'title': 'Country name',\n",
       " 'description': 'The name of country'}"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "schema.field(\"country_name\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "directory = \"Formation_SBC4D/\"\n",
    "filename = \"human-development-report-schema\"\n",
    "schema.save(directory, filename=filename, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>pre { white-space: pre !important; }</style>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "### Les importations et paramètres suivants vous permettent d'obtenir un large éventail de résultats pour vos tableaux\n",
    "from IPython.core.display import HTML\n",
    "display(HTML(\"<style>pre { white-space: pre !important; }</style>\"))\n",
    "\n",
    "import numpy as np\n",
    "import whyqd as _w\n",
    "\n",
    "SCHEMA_SOURCE = \"Formation_SBC4D/human-development-report-schema.json\"\n",
    "DIRECTORY = \"Formation_SBC4D/\"\n",
    "INPUT_DATA = [\n",
    "    \"Formation_SBC4D/HDR 2007-2008 Table 01.xlsx\"\n",
    "]\n",
    "method = _w.Method(SCHEMA_SOURCE, directory=DIRECTORY, input_data=INPUT_DATA)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "\n",
      "Data id: 4f24f227-dd62-4cbd-b819-efc5ec5d19fb\n",
      "Original source: Formation_SBC4D/HDR 2007-2008 Table 01.xlsx\n",
      "\n",
n",
      "  ..  Unnamed: 0                   Unnamed: 1    Unnamed: 2  Unnamed: 3                                                        Unnamed: 4    Unnamed: 5    Unnamed: 6    Unnamed: 7    Unnamed: 8    Unnamed: 9    Unnamed: 10    Unnamed: 11    Unnamed: 12    Unnamed: 13    Unnamed: 14    Unnamed: 15    Unnamed: 16    Unnamed: 17    Unnamed: 18    Unnamed: 19    Unnamed: 20    Unnamed: 21    Unnamed: 22    Unnamed: 23    Unnamed: 24    Unnamed: 25    Unnamed: 26    Unnamed: 27    Unnamed: 28    Unnamed: 29    Unnamed: 30    Unnamed: 31    Unnamed: 32\n",
n",
      "   0  nan                                 nan           nan  Monitoring human development: enlarging people's choices . . .           nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
      "   1  1 Human development index           nan           nan  nan                                                                      nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
      "   2  nan                                 nan           nan  nan                                                                      nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(method.print_input_data())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['CATEGORISE', 'DEBLANK', 'DEDUPE', 'DELETE', 'MELT', 'REBASE', 'RENAME']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "method.default_morph_types"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'name': 'CATEGORISE',\n",
       " 'title': 'Categorise',\n",
       " 'type': 'morph',\n",
       " 'description': 'Convert row-level categories into column categorisations.',\n",
       " 'structure': ['rows', 'column_names']}"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "method.default_morph_settings(\"CATEGORISE\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Unnamed: 1</th>\n",
       "      <th>Unnamed: 2</th>\n",
       "      <th>Unnamed: 3</th>\n",
       "      <th>Unnamed: 4</th>\n",
       "      <th>Unnamed: 5</th>\n",
       "      <th>Unnamed: 6</th>\n",
       "      <th>Unnamed: 7</th>\n",
       "      <th>Unnamed: 8</th>\n",
       "      <th>Unnamed: 9</th>\n",
       "      <th>...</th>\n",
       "      <th>Unnamed: 23</th>\n",
       "      <th>Unnamed: 24</th>\n",
       "      <th>Unnamed: 25</th>\n",
       "      <th>Unnamed: 26</th>\n",
       "      <th>Unnamed: 27</th>\n",
       "      <th>Unnamed: 28</th>\n",
       "      <th>Unnamed: 29</th>\n",
       "      <th>Unnamed: 30</th>\n",
       "      <th>Unnamed: 31</th>\n",
       "      <th>Unnamed: 32</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Monitoring human development: enlarging people...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1 Human development index</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 33 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Unnamed: 0 Unnamed: 1 Unnamed: 2  \\\n",
       "0                        NaN        NaN        NaN   \n",
       "1  1 Human development index        NaN        NaN   \n",
       "2                        NaN        NaN        NaN   \n",
       "3                        NaN        NaN        NaN   \n",
       "4                        NaN        NaN        NaN   \n",
       "\n",
       "                                          Unnamed: 3 Unnamed: 4 Unnamed: 5  \\\n",
       "0  Monitoring human development: enlarging people...        NaN        NaN   \n",
       "1                                                NaN        NaN        NaN   \n",
       "2                                                NaN        NaN        NaN   \n",
       "3                                                NaN        NaN        NaN   \n",
       "4                                                NaN        NaN        NaN   \n",
       "\n",
       "  Unnamed: 6 Unnamed: 7 Unnamed: 8 Unnamed: 9  ... Unnamed: 23 Unnamed: 24  \\\n",
       "0        NaN        NaN        NaN        NaN  ...         NaN         NaN   \n",
       "1        NaN        NaN        NaN        NaN  ...         NaN         NaN   \n",
       "2        NaN        NaN        NaN        NaN  ...         NaN         NaN   \n",
       "3        NaN        NaN        NaN        NaN  ...         NaN         NaN   \n",
       "4        NaN        NaN        NaN        NaN  ...         NaN         NaN   \n",
       "\n",
       "  Unnamed: 25 Unnamed: 26 Unnamed: 27 Unnamed: 28 Unnamed: 29 Unnamed: 30  \\\n",
       "0         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "1         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "2         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "3         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "4         NaN         NaN         NaN         NaN         NaN         NaN   \n",
       "\n",
       "  Unnamed: 31 Unnamed: 32  \n",
       "0         NaN         NaN  \n",
       "1         NaN         NaN  \n",
       "2         NaN         NaN  \n",
       "3         NaN         NaN  \n",
       "4         NaN         NaN  \n",
       "\n",
       "[5 rows x 33 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "_id = method.input_data[0][\"id\"]\n",
    "df = method.input_dataframe(_id)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.reset_input_data_morph(_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.add_input_data_morph(_id, [\"REBASE\", 8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "rows = [int(i) for i in np.arange(192, df.index[-1]+1)]\n",
    "method.add_input_data_morph(_id, [\"DELETE\", rows])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = [\n",
    "     \"HDI rank\",\n",
    "     \"Country\",\n",
    "     \"Human development index (HDI) value 2005\",\n",
    "     \"Life expectancy at birth (years) 2005\",\n",
    "     \"Reference 1\",\n",
    "     \"Adult literacy rate (% aged 15 and above) 1995-2005\",\n",
    "     \"Reference 2\",\n",
    "     \"Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005\",\n",
    "     \"Reference 3\",\n",
    "     \"GDP per capita (PPP US$) 2005\",\n",
    "     \"Reference 4\",\n",
    "     \"Life expectancy index\",\n",
    "     \"Education index\",\n",
    "     \"GDP index\",\n",
    "     \"GDP per capita (PPP US$) rank minus HDI rank\"\n",
    "]\n",
    "method.add_input_data_morph(_id, [\"RENAME\", columns])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>HDI rank</th>\n",
       "      <th>Country</th>\n",
       "      <th>Human development index (HDI) value 2005</th>\n",
       "      <th>Life expectancy at birth (years) 2005</th>\n",
       "      <th>Reference 1</th>\n",
       "      <th>Adult literacy rate (% aged 15 and above) 1995-2005</th>\n",
       "      <th>Reference 2</th>\n",
       "      <th>Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005</th>\n",
       "      <th>Reference 3</th>\n",
       "      <th>GDP per capita (PPP US$) 2005</th>\n",
       "      <th>Reference 4</th>\n",
       "      <th>Life expectancy index</th>\n",
       "      <th>Education index</th>\n",
       "      <th>GDP index</th>\n",
       "      <th>GDP per capita (PPP US$) rank minus HDI rank</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>0.968</td>\n",
       "      <td>81.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>95.4</td>\n",
       "      <td>e</td>\n",
       "      <td>36,510</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.941</td>\n",
       "      <td>0.978</td>\n",
       "      <td>0.985</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2</td>\n",
       "      <td>Norway</td>\n",
       "      <td>0.968</td>\n",
       "      <td>79.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>99.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41,420</td>\n",
       "      <td>f</td>\n",
       "      <td>0.913</td>\n",
       "      <td>0.991</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3</td>\n",
       "      <td>Australia</td>\n",
       "      <td>0.962</td>\n",
       "      <td>80.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>113.0</td>\n",
       "      <td>g</td>\n",
       "      <td>31,794</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.931</td>\n",
       "      <td>0.993</td>\n",
       "      <td>0.962</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>0.961</td>\n",
       "      <td>80.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>99.2</td>\n",
       "      <td>e,h</td>\n",
       "      <td>33,375</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.921</td>\n",
       "      <td>0.991</td>\n",
       "      <td>0.970</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  HDI rank    Country  \\\n",
       "10  HIGH HUMAN DEVELOPMENT        NaN   \n",
       "11                       1    Iceland   \n",
       "12                       2     Norway   \n",
       "13                       3  Australia   \n",
       "14                       4     Canada   \n",
       "\n",
       "   Human development index (HDI) value 2005  \\\n",
       "10                                      NaN   \n",
       "11                                    0.968   \n",
       "12                                    0.968   \n",
       "13                                    0.962   \n",
       "14                                    0.961   \n",
       "\n",
       "   Life expectancy at birth (years) 2005 Reference 1  \\\n",
       "10                                   NaN         NaN   \n",
       "11                                  81.5         NaN   \n",
       "12                                  79.8         NaN   \n",
       "13                                  80.9         NaN   \n",
       "14                                  80.3         NaN   \n",
       "\n",
       "   Adult literacy rate (% aged 15 and above) 1995-2005 Reference 2  \\\n",
       "10                                                NaN          NaN   \n",
       "11                                                 ..            d   \n",
       "12                                                 ..            d   \n",
       "13                                                 ..            d   \n",
       "14                                                 ..            d   \n",
       "\n",
       "   Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005  \\\n",
       "10                                                NaN                                      \n",
       "11                                               95.4                                      \n",
       "12                                               99.2                                      \n",
       "13                                              113.0                                      \n",
       "14                                               99.2                                      \n",
       "\n",
       "   Reference 3 GDP per capita (PPP US$) 2005 Reference 4  \\\n",
       "10         NaN                           NaN         NaN   \n",
       "11           e                        36,510         NaN   \n",
       "12         NaN                        41,420           f   \n",
       "13           g                        31,794         NaN   \n",
       "14         e,h                        33,375         NaN   \n",
       "\n",
       "   Life expectancy index Education index GDP index  \\\n",
       "10                   NaN             NaN       NaN   \n",
       "11                 0.941           0.978     0.985   \n",
       "12                 0.913           0.991     1.000   \n",
       "13                 0.931           0.993     0.962   \n",
       "14                 0.921           0.991     0.970   \n",
       "\n",
       "   GDP per capita (PPP US$) rank minus HDI rank  \n",
       "10                                          NaN  \n",
       "11                                            4  \n",
       "12                                            1  \n",
       "13                                           13  \n",
       "14                                            6  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = method.input_dataframe(_id)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "Task morph `CATEGORISE` has invalid structure `['rows', 'column_names']`.",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-15-479a26d3d2d8>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[0mhdi_categories\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;34m\"HIGH HUMAN DEVELOPMENT\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"MEDIUM HUMAN DEVELOPMENT\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"LOW HUMAN DEVELOPMENT\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      2\u001b[0m \u001b[0mrows\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"HDI rank\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0misin\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mhdi_categories\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 3\u001b[1;33m \u001b[0mmethod\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0madd_input_data_morph\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0m_id\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m[\u001b[0m\u001b[1;34m\"CATEGORISE\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mrows\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m\"HDI category\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;32m~\\ANACONDA\\envs\\datascience\\lib\\site-packages\\whyqd\\method\\method.py\u001b[0m in \u001b[0;36madd_input_data_morph\u001b[1;34m(self, _id, new_morph)\u001b[0m\n\u001b[0;32m   1128\u001b[0m                         \u001b[0minput_source\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_get_input_data_morph\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0m_id\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1129\u001b[0m                 \u001b[0mdf\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0minput_dataframe\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0m_id\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1130\u001b[1;33m                 \u001b[0minput_source\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"morph\"\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0madd_morph\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mnew_morph\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mnew_morph\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmorph_methods\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0minput_source\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m\"morph\"\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1131\u001b[0m                 \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_set_input_data_morph\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0minput_source\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1132\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\ANACONDA\\envs\\datascience\\lib\\site-packages\\whyqd\\method\\method.py\u001b[0m in \u001b[0;36madd_morph\u001b[1;34m(self, df, new_morph, morph_methods)\u001b[0m\n\u001b[0;32m   1251\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mmorph\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mvalidates\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m=\u001b[0m\u001b[0mdf\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mparameters\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1252\u001b[0m                         \u001b[0me\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;34mF\"Task morph `{morph.name}` has invalid structure `{morph.structure}`.\"\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 1253\u001b[1;33m                         \u001b[1;32mraise\u001b[0m \u001b[0mValueError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0me\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1254\u001b[0m                 \u001b[0mmorph_settings\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mmorph\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0msettings\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1255\u001b[0m                 \u001b[0mmorph_settings\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"id\"\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mstr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0muuid\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0muuid4\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mValueError\u001b[0m: Task morph `CATEGORISE` has invalid structure `['rows', 'column_names']`."
     ]
    }
   ],
   "source": [
    "hdi_categories = [\"HIGH HUMAN DEVELOPMENT\", \"MEDIUM HUMAN DEVELOPMENT\", \"LOW HUMAN DEVELOPMENT\"]\n",
    "rows = df[df[\"HDI rank\"].isin(hdi_categories)].index\n",
    "method.add_input_data_morph(_id, [\"CATEGORISE\", rows, \"HDI category\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.indexes.numeric.Int64Index"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(rows)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.add_input_data_morph(_id, [\"CATEGORISE\", list(rows), \"HDI category\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>HDI rank</th>\n",
       "      <th>Country</th>\n",
       "      <th>Human development index (HDI) value 2005</th>\n",
       "      <th>Life expectancy at birth (years) 2005</th>\n",
       "      <th>Reference 1</th>\n",
       "      <th>Adult literacy rate (% aged 15 and above) 1995-2005</th>\n",
       "      <th>Reference 2</th>\n",
       "      <th>Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005</th>\n",
       "      <th>Reference 3</th>\n",
       "      <th>GDP per capita (PPP US$) 2005</th>\n",
       "      <th>Reference 4</th>\n",
       "      <th>Life expectancy index</th>\n",
       "      <th>Education index</th>\n",
       "      <th>GDP index</th>\n",
       "      <th>GDP per capita (PPP US$) rank minus HDI rank</th>\n",
       "      <th>HDI category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>0.968</td>\n",
       "      <td>81.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>95.4</td>\n",
       "      <td>e</td>\n",
       "      <td>36,510</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.941</td>\n",
       "      <td>0.978</td>\n",
       "      <td>0.985</td>\n",
       "      <td>4</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2</td>\n",
       "      <td>Norway</td>\n",
       "      <td>0.968</td>\n",
       "      <td>79.8</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>99.2</td>\n",
       "      <td>NaN</td>\n",
       "      <td>41,420</td>\n",
       "      <td>f</td>\n",
       "      <td>0.913</td>\n",
       "      <td>0.991</td>\n",
       "      <td>1.000</td>\n",
       "      <td>1</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>3</td>\n",
       "      <td>Australia</td>\n",
       "      <td>0.962</td>\n",
       "      <td>80.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>113.0</td>\n",
       "      <td>g</td>\n",
       "      <td>31,794</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.931</td>\n",
       "      <td>0.993</td>\n",
       "      <td>0.962</td>\n",
       "      <td>13</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>0.961</td>\n",
       "      <td>80.3</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>99.2</td>\n",
       "      <td>e,h</td>\n",
       "      <td>33,375</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.921</td>\n",
       "      <td>0.991</td>\n",
       "      <td>0.970</td>\n",
       "      <td>6</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>5</td>\n",
       "      <td>Ireland</td>\n",
       "      <td>0.959</td>\n",
       "      <td>78.4</td>\n",
       "      <td>NaN</td>\n",
       "      <td>..</td>\n",
       "      <td>d</td>\n",
       "      <td>99.9</td>\n",
       "      <td>NaN</td>\n",
       "      <td>38,505</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.890</td>\n",
       "      <td>0.993</td>\n",
       "      <td>0.994</td>\n",
       "      <td>-1</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   HDI rank    Country Human development index (HDI) value 2005  \\\n",
       "11        1    Iceland                                    0.968   \n",
       "12        2     Norway                                    0.968   \n",
       "13        3  Australia                                    0.962   \n",
       "14        4     Canada                                    0.961   \n",
       "15        5    Ireland                                    0.959   \n",
       "\n",
       "   Life expectancy at birth (years) 2005 Reference 1  \\\n",
       "11                                  81.5         NaN   \n",
       "12                                  79.8         NaN   \n",
       "13                                  80.9         NaN   \n",
       "14                                  80.3         NaN   \n",
       "15                                  78.4         NaN   \n",
       "\n",
       "   Adult literacy rate (% aged 15 and above) 1995-2005 Reference 2  \\\n",
       "11                                                 ..            d   \n",
       "12                                                 ..            d   \n",
       "13                                                 ..            d   \n",
       "14                                                 ..            d   \n",
       "15                                                 ..            d   \n",
       "\n",
       "   Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005  \\\n",
       "11                                               95.4                                      \n",
       "12                                               99.2                                      \n",
       "13                                              113.0                                      \n",
       "14                                               99.2                                      \n",
       "15                                               99.9                                      \n",
       "\n",
       "   Reference 3 GDP per capita (PPP US$) 2005 Reference 4  \\\n",
       "11           e                        36,510         NaN   \n",
       "12         NaN                        41,420           f   \n",
       "13           g                        31,794         NaN   \n",
       "14         e,h                        33,375         NaN   \n",
       "15         NaN                        38,505         NaN   \n",
       "\n",
       "   Life expectancy index Education index GDP index  \\\n",
       "11                 0.941           0.978     0.985   \n",
       "12                 0.913           0.991     1.000   \n",
       "13                 0.931           0.993     0.962   \n",
       "14                 0.921           0.991     0.970   \n",
       "15                 0.890           0.993     0.994   \n",
       "\n",
       "   GDP per capita (PPP US$) rank minus HDI rank            HDI category  \n",
       "11                                            4  HIGH HUMAN DEVELOPMENT  \n",
       "12                                            1  HIGH HUMAN DEVELOPMENT  \n",
       "13                                           13  HIGH HUMAN DEVELOPMENT  \n",
       "14                                            6  HIGH HUMAN DEVELOPMENT  \n",
       "15                                           -1  HIGH HUMAN DEVELOPMENT  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = method.input_dataframe(_id)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = [\n",
    "     \"HDI rank\",\n",
    "     \"Human development index (HDI) value 2005\",\n",
    "     \"Life expectancy at birth (years) 2005\",\n",
    "     \"Adult literacy rate (% aged 15 and above) 1995-2005\",\n",
    "     \"Combined gross enrolment ratio for primary, secondary and tertiary education (%) 2005\",\n",
    "     \"GDP per capita (PPP US$) 2005\",\n",
    "     \"Life expectancy index\",\n",
    "     \"Education index\",\n",
    "     \"GDP index\",\n",
    "     \"GDP per capita (PPP US$) rank minus HDI rank\"\n",
    "]\n",
    "\n",
    "method.add_input_data_morph(_id, [\"MELT\", columns, [\"Indicator Name\", \"Indicator Value\"]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "columns = [\n",
    "    \"Reference 1\",\n",
    "    \"Reference 2\",\n",
    "    \"Reference 3\",\n",
    "    \"Reference 4\"\n",
    "]\n",
    "method.add_input_data_morph(_id, [\"MELT\", columns, [\"Reference Name\", \"Reference\"]])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.add_input_data_morph(_id, [\"DEBLANK\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Indicator Name</th>\n",
       "      <th>Indicator Value</th>\n",
       "      <th>Country</th>\n",
       "      <th>HDI category</th>\n",
       "      <th>Reference Name</th>\n",
       "      <th>Reference</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>HDI rank</td>\n",
       "      <td>1</td>\n",
       "      <td>Iceland</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>Reference 1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>HDI rank</td>\n",
       "      <td>2</td>\n",
       "      <td>Norway</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>Reference 1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HDI rank</td>\n",
       "      <td>3</td>\n",
       "      <td>Australia</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>Reference 1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>HDI rank</td>\n",
       "      <td>4</td>\n",
       "      <td>Canada</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>Reference 1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>HDI rank</td>\n",
       "      <td>5</td>\n",
       "      <td>Ireland</td>\n",
       "      <td>HIGH HUMAN DEVELOPMENT</td>\n",
       "      <td>Reference 1</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Indicator Name Indicator Value    Country            HDI category  \\\n",
       "0       HDI rank               1    Iceland  HIGH HUMAN DEVELOPMENT   \n",
       "1       HDI rank               2     Norway  HIGH HUMAN DEVELOPMENT   \n",
       "2       HDI rank               3  Australia  HIGH HUMAN DEVELOPMENT   \n",
       "3       HDI rank               4     Canada  HIGH HUMAN DEVELOPMENT   \n",
       "4       HDI rank               5    Ireland  HIGH HUMAN DEVELOPMENT   \n",
       "\n",
       "  Reference Name Reference  \n",
       "0    Reference 1       NaN  \n",
       "1    Reference 1       NaN  \n",
       "2    Reference 1       NaN  \n",
       "3    Reference 1       NaN  \n",
       "4    Reference 1       NaN  "
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = method.input_dataframe(_id)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "`merge` will join, in order from right to left, your input data on a common column.\n",
      "\n",
      "To add input data, where `input_data` is a filename, or list of filenames:\n",
      "\n",
      "\t>>> method.add_input_data(input_data)\n",
      "\n",
      "To remove input data, where `id` is the unique id for that input data:\n",
      "\n",
      "\t>>> method.remove_input_data(id)\n",
      "\n",
      "Prepare an `order_and_key` list, where each dict in the list has:\n",
      "\n",
      "\t{{id: input_data id, key: column_name for merge}}\n",
      "\n",
      "Run the merge by calling (and, optionally - if you need to overwrite an existing merge - setting\n",
      "`overwrite_working=True`):\n",
      "\n",
      "\t>>> method.merge(order_and_key, overwrite_working=True)\n",
      "\n",
      "To view your existing `input_data`:\n",
      "\n",
      "\t>>> method.input_data\n",
      "\n",
      "\n",
      "Data id: 4f24f227-dd62-4cbd-b819-efc5ec5d19fb\n",
      "Original source: Formation_SBC4D/HDR 2007-2008 Table 01.xlsx\n",
      "\n",
n",
      "  ..  Unnamed: 0                   Unnamed: 1    Unnamed: 2  Unnamed: 3                                                        Unnamed: 4    Unnamed: 5    Unnamed: 6    Unnamed: 7    Unnamed: 8    Unnamed: 9    Unnamed: 10    Unnamed: 11    Unnamed: 12    Unnamed: 13    Unnamed: 14    Unnamed: 15    Unnamed: 16    Unnamed: 17    Unnamed: 18    Unnamed: 19    Unnamed: 20    Unnamed: 21    Unnamed: 22    Unnamed: 23    Unnamed: 24    Unnamed: 25    Unnamed: 26    Unnamed: 27    Unnamed: 28    Unnamed: 29    Unnamed: 30    Unnamed: 31    Unnamed: 32\n",
n",
      "   0  nan                                 nan           nan  Monitoring human development: enlarging people's choices . . .           nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
      "   1  1 Human development index           nan           nan  nan                                                                      nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
      "   2  nan                                 nan           nan  nan                                                                      nan           nan           nan           nan           nan           nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan            nan\n",
n",
      "\n",
      "\n",
      "Current method status: `Ready to Merge`\n"
     ]
    }
   ],
   "source": [
    "print(method.help(\"merge\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%time method.merge(overwrite_working=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# L'exécution de la ligne de code ci-dessus produit l'erreur suivante \"Le noyau semble planté. Il va redémarrer automatiquement.\" \n",
    "# Ainsi, les lignes de code qui suivent produisent également des erreurs lorsqu'elles sont exécutées."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "`structure` is the core of the wrangling process and is the process where you define the actions\n",
      "which must be performed to restructure your working data.\n",
      "\n",
      "Create a list of methods of the form:\n",
      "\n",
      "\t{\n",
      "\t\t\"schema_field1\": [\"action\", \"column_name1\", [\"action\", \"column_name2\"]],\n",
      "\t\t\"schema_field2\": [\"action\", \"column_name1\", \"modifier\", [\"action\", \"column_name2\"]],\n",
      "\t}\n",
      "\n",
      "The format for defining a `structure` is as follows::\n",
      "\n",
      "\t[action, column_name, [action, column_name]]\n",
      "\n",
      "e.g.::\n",
      "\n",
      "\t[\"CATEGORISE\", \"+\", [\"ORDER\", \"column_1\", \"column_2\"]]\n",
      "\n",
      "This permits the creation of quite expressive wrangling structures from simple building\n",
      "blocks.\n",
      "\n",
      "The schema for this method consists of the following terms:\n",
      "\n",
      "['hdi_rank', 'hdi_level', 'country_name', 'survey_year', 'hdi_value', 'expect_birth', 'liter_rate', 'enrolment_ratio%', 'gdp_capita_pppus$', 'expect_index', 'educ_index', 'gdp_index', 'gdphdi_rank']\n",
      "\n",
      "The actions:\n",
      "\n",
      "['CALCULATE', 'CATEGORISE', 'JOIN', 'NEW', 'ORDER', 'ORDER_NEW', 'ORDER_OLD', 'RENAME']\n",
      "\n",
      "The columns from your working data:\n",
      "\n",
      "[]\n",
      "\n",
      "\n",
      "Current method status: `Ready to Merge`\n"
     ]
    }
   ],
   "source": [
    "print(method.help(\"structure\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "structure = {\n",
    "    \"indicator_name\": [\"RENAME\", \"Indicator Name\"],\n",
    "    \"values\": [\"RENAME\", \"Indicator Value\"],\n",
    "    \"country_name\": [\"RENAME\", \"Country\"],\n",
    "    \"hdi_category\": [\"RENAME\", \"HDI category\"],\n",
    "    \"reference_name\": [\"RENAME\", \"Reference Name\"],\n",
    "    \"reference\": [\"RENAME\", \"Reference\"],\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.set_structure(**structure)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.transform(overwrite_output=True)\n",
    "FILENAME = \"hdi_report_exercise\"\n",
    "method.save(directory, filename=FILENAME, overwrite=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "method.input_data_morphs(_id)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%time method.validates"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "source = \"Formation_SBC4D/................................csv\"\n",
    "\n",
    "df = pd.read_csv(source)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 7120 entries, 0 to 7119\n",
      "Data columns (total 6 columns):\n",
      " #   Column           Non-Null Count  Dtype \n",
      "---  ------           --------------  ----- \n",
      " 0   Indicator Name   7120 non-null   object\n",
      " 1   Indicator Value  7120 non-null   object\n",
      " 2   Country          7080 non-null   object\n",
      " 3   HDI category     6720 non-null   object\n",
      " 4   Reference Name   7120 non-null   object\n",
      " 5   Reference        2570 non-null   object\n",
      "dtypes: object(6)\n",
      "memory usage: 389.4+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pandas_schema import Column, Schema\n",
    "from pandas_schema.validation import LeadingWhitespaceValidation, TrailingWhitespaceValidation, IsDtypeValidation, InListValidation\n",
    "\n",
    "columns = [\"country_name\", \"hdi_category\", \"values\"]\n",
    "\n",
    "hdi_categories = [\"HIGH HUMAN DEVELOPMENT\", \"MEDIUM HUMAN DEVELOPMENT\", \"LOW HUMAN DEVELOPMENT\"]\n",
    "\n",
    "schema = Schema([\n",
    "    Column(\"country_name\", [LeadingWhitespaceValidation(), TrailingWhitespaceValidation()]),\n",
    "    Column(\"hdi_category\", [InListValidation(hdi_categories)]),\n",
    "    Column(\"values\", [IsDtypeValidation(np.dtype(float)), IsDtypeValidation(np.dtype(int))])\n",
    "])\n",
    "\n",
    "errors = schema.validate(df[columns])\n",
    "\n",
    "print(F\"Nombre d'erreurs :  {len(errors)}\")\n",
    "\n",
    "for error in errors[:10]:\n",
    "        print(error)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "for l in method.citation.split(\",\"):\n",
    "    print(l)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
